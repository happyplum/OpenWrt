# 内核网络参数调整
######################################################
# 默认值 (供参考)
#
# net.ipv4.tcp_fastopen = 1
# net.core.netdev_max_backlog = 1000
# net.core.rmem_default = 212992
# net.core.wmem_default = 212992
# net.core.rmem_max = 4194304
# net.core.wmem_max = 1048576
# net.ipv4.tcp_max_syn_backlog = 128
# net.ipv4.tcp_rmem = 4096	131072	6291456
# net.ipv4.tcp_wmem = 4096	16384	4194304
#
######################################################

######################################################
# 优化值(供参考)

# 设置网络设备的最大backlog队列大小，提高网络设备处理能力，特别是在高并发场景下
net.core.netdev_max_backlog = 9000

# 设置内核缓冲区的默认大小，当应用程序读写数据时，如果缓冲区不足，内核会自动扩展缓冲区
net.core.rmem_default = 67108864
net.core.wmem_default = 67108864

# 设置内核缓冲区的最大值，当应用程序读写数据时，如果缓冲区超过这个值，内核会开始丢弃旧的数据包
net.core.rmem_max = 104857600
net.core.wmem_max = 104857600

# 设置网络设备的流量控制，当网络设备接收到的数据包数量超过这个值时，它会开始限制新数据的接收，直到当前数据包处理完毕
# default value: 8000
net.core.netdev_budget_usecs = 16000
# default value: 300
net.core.netdev_budget = 600

# 设置网络设备的权重，当网络设备接收到的数据包数量超过这个值时，它会开始限制新数据的接收，直到当前数据包处理完毕
# default value: 64
net.core.dev_weight = 128

# 设置连接跟踪表的最大值，防止内存不足导致的程序崩溃
# default value: 65535
net.netfilter.nf_conntrack_max = 327680
net.nf_conntrack_max = 327680
# default value: 16384
net.netfilter.nf_conntrack_buckets = 81920

#
#######################################################

# 禁用TCP窗口检查，提高Nginx性能，特别是在高并发场景下
net.netfilter.nf_conntrack_tcp_no_window_check = 1

# 设置系统最少保留的内存，防止内存不足导致的程序崩溃
# default value: 16384
vm.min_free_kbytes = 32768

# 设置系统允许打开的最大文件数
fs.file-max = 1000000

# 设置每个用户可以创建的inotify实例的最大数量
fs.inotify.max_user_instances = 8192

# 设置默认的排队规则为公平队列（Fair Queue）
net.core.default_qdisc = fq

# 设置监听套接字的最大排队数量
net.core.somaxconn = 32768

# 设置网络设备接口的最大排队数量
net.core.netdev_max_backlog = 32768

######################################################
# IPv4相关

# 开启IPv4转发功能
net.ipv4.ip_forward = 1

# 开启所有网络接口的IPv4转发功能
net.ipv4.conf.all.forwarding = 1

# 开启默认网络接口的IPv4转发功能
net.ipv4.conf.default.forwarding = 1

# 禁用路由器过滤器，提高Nginx性能，特别是在高并发场景下
net.ipv4.conf.all.rp_filter = 0

# 设置TCP拥塞控制算法为BBR
net.ipv4.tcp_congestion_control = bbr

# 设置TCP快速打开功能，提高TCP连接性能，特别是在高并发场景下
net.ipv4.tcp_fastopen = 3

#
#######################################################

######################################################
# IPv6相关

# 开启IPv6转发功能
net.ipv6.conf.all.forwarding = 1

# 开启默认网络接口的IPv6转发功能
net.ipv6.conf.default.forwarding = 1

# 开启本地回环接口的IPv6转发功能
net.ipv6.conf.lo.forwarding = 1

# 不禁用所有网络接口的IPv6功能
net.ipv6.conf.all.disable_ipv6 = 0

# 不禁用默认网络接口的IPv6功能
net.ipv6.conf.default.disable_ipv6 = 0

# 不禁用本地回环接口的IPv6功能
net.ipv6.conf.lo.disable_ipv6 = 0

# 允许所有网络接口接收IPv6路由通告
net.ipv6.conf.all.accept_ra = 2

# 允许默认网络接口接收IPv6路由通告
net.ipv6.conf.default.accept_ra = 2

#
#######################################################