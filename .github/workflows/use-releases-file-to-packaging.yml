#========================================================================================================================
# https://github.com/ophub/amlogic-s9xxx-openwrt
# Description: Use Releases file to packaging
# Cron: min (0 - 59) / hour (0 - 23) / day of month (1 - 31) / month (1 - 12) / day of week (0 - 6)(Sunday - Saturday)
#========================================================================================================================

name: Use Releases file to Packaging

on:
  repository_dispatch:
  workflow_dispatch:
  #     inputs:
  #         ssh:
  #             description: "SSH connection"
  #             required: false
  #             default: "false"
  # schedule:
  #     - cron: "0 0 * * *"

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: R68S/feeds.conf.default
  CONFIG_FILE: R68S/.config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: R68S/diy-part2.sh
  UPLOAD_FIRMWARE: false
  UPLOAD_RELEASE: true
  RECENT_LASTEST: 30
  TZ: Asia/Shanghai
  FILE_NAME: ARMv8_MINI
  PRODUCT_NAME: ARMv8_MINI

jobs:
  build:
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id || ! github.event.sender.id

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install $(curl -fsSL https://is.gd/depends_ubuntu_2204)
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "$TZ"
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir

      - name: Clone source code
        working-directory: /workdir
        run: |
          df -hT $PWD
          git clone $REPO_URL -b $REPO_BRANCH openwrt
          ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
          cd openwrt
          useVersionInfo=$(git show -s --date=short --format="Author: %an<br/>date: %cd<br/>commit: %s<br/>commit hash: %H")
          echo "useVersionInfo=$useVersionInfo" >> $GITHUB_ENV
          echo "DATE=$(date "+%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV
          echo "DATE1=$(date "+%Y-%m-%d")" >> $GITHUB_ENV

      - name: Package Armvirt as OpenWrt
        if: (!cancelled())
        uses: ophub/flippy-openwrt-actions@main
        env:
          OPENWRT_ARMVIRT: https://github.com/happyplum/OpenWrt/releases/download/ARMv8_R68S_ROOTFS/openwrt-armvirt-64-generic-rootfs.tar.gz
          PACKAGE_SOC: r68s
          WHOAMI: happyplum
          KERNEL_REPO_URL: https://github.com/breakings/OpenWrt/tree/main/opt
          KERNEL_VERSION_NAME: 5.10.167_5.15.93_6.1.11
          KERNEL_AUTO_LATEST: true
          GZIP_IMGS: .gz
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifact to Actions
        uses: kittaakos/upload-artifact-as-is@master
        if: env.PACKAGED_STATUS == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
        with:
          path: ${{ env.PACKAGED_OUTPUTPATH }}/

      - name: Upload OpenWrt Firmware to Release
        id: release
        uses: ncipollo/release-action@main
        if: env.PACKAGED_STATUS == 'success' && env.UPLOAD_RELEASE == 'true' && !cancelled()
        with:
          name: R${{ env.DATE }} for ${{ env.FILE_NAME }}
          allowUpdates: true
          removeArtifacts: true
          tag: ${{ env.FILE_NAME }}
          commit: main
          token: ${{ secrets.RELEASES_TOKEN }}
          artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
          body: |
            - 默认IP：192.168.7.1 默认密码：password (WiFi密码同）
            - 当前使用版本:
            - ➦[主源码](https://github.com/coolsnowwolf/lede)
            - ➦[内核](https://github.com/unifreq/openwrt_packit)
            - ➦[脚本](https://github.com/breakings/OpenWrt)
            - 支持的[内核](https://github.com/breakings/OpenWrt/tree/main/opt/kernel)请查阅 opt/kernel
            ${{ env.useVersionInfo }}

      - name: Delete workflow runs
        uses: GitRML/delete-workflow-runs@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          retain_days: 60
          keep_minimum_runs: 60

      - name: Remove old Releases
        uses: dev-drprasad/delete-older-releases@master
        if: env.UPLOAD_RELEASE == 'true' && !cancelled()
        with:
          repo:
          keep_latest: 30
          delete_tag_pattern:
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
